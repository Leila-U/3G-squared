{"version":3,"sources":["common/SvgIcon/index.js","common/Button/styles.js","common/Button/index.js","components/ContentBlock/LeftContentBlock/styles.js","components/ContentBlock/LeftContentBlock/index.js","components/ContentBlock/RightContentBlock/styles.js","components/ContentBlock/RightContentBlock/index.js","components/ContentBlock/VideoContentBlock/styles.js","components/ContentBlock/VideoContentBlock/index.js","components/ContentBlock/index.js"],"names":["SvgIcon","src","width","height","alt","with","Button","styled","button","props","color","children","onClick","LeftContentBlock","section","Content","p","ContentWrapper","div","ServiceWrapper","MinTitle","h6","MinPara","Col","withTranslation","icon","title","content","t","id","type","justify","align","lg","md","sm","xs","left","className","right","map","item","span","RightBlockContainer","ButtonWrapper","window","location","assign","document","getElementById","scrollIntoView","behavior","scrollTo","url","ContentBlock","RightContentBlock"],"mappings":"oJAIeA,UAJC,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAf,OACd,qBAAKF,IAAG,mBAAcA,GAAOG,IAAKH,EAAKI,KAAMH,EAAOC,OAAQA,M,qDCCjDG,E,KAASC,EAAOC,OAAV,0dACH,SAACC,GAAD,OAAWA,EAAMC,OAAS,aAC/B,SAACD,GAAD,OAAYA,EAAMC,MAAQ,UAAY,UAIrC,SAACD,GAAD,OAAYA,EAAMC,MAAQ,oBAAsB,SAS/C,SAACD,GAAD,OAAYA,EAAMP,MAAQ,QAAU,UAIpC,SAACO,GAAD,OAAYA,EAAMP,MAAQ,QAAU,UAIpC,SAACO,GAAD,OAAYA,EAAMP,MAAQ,QAAU,U,OCjBlCI,UANA,SAAC,GAAD,IAAGI,EAAH,EAAGA,MAAOR,EAAV,EAAUA,MAAOS,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,QAA3B,OACb,cAAC,EAAD,CAAUF,MAAOA,EAAOR,MAAOA,EAAOU,QAASA,EAA/C,SACGD,M,yJCDQE,EAAmBN,IAAOO,QAAV,8JAShBC,EAAUR,IAAOS,EAAV,wDAIPC,EAAiBV,IAAOW,IAAV,mJASdC,EAAiBZ,IAAOW,IAAV,qGAMdE,EAAWb,IAAOc,GAAV,4FAMRC,EAAUf,IAAOS,EAAV,mD,GAIOT,YAAOgB,IAAPhB,CAAH,sE,MCSTiB,iBA1CU,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASb,EAAqB,EAArBA,QAASc,EAAY,EAAZA,EAAGC,EAAS,EAATA,GAC5D,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAKC,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,SAASH,GAAIA,EAA5D,UACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOC,MAAI,EAAX,SACE,cAACrC,EAAA,QAAD,CACEC,IAAKwB,EACLa,UAAU,oBACVpC,MAAM,OACNC,OAAO,aAIb,cAAC,IAAD,CAAK8B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOG,OAAK,EAAZ,SACE,eAAC,EAAD,WACE,6BAAKX,EAAEF,KACP,cAAC,EAAD,UAAYE,EAAED,KACd,cAAC,EAAD,UACE,cAAC,IAAD,CAAKG,KAAK,OAAOC,QAAQ,gBAAzB,SACGjB,GACoB,kBAAZA,GACPA,EAAQ0B,KAAI,SAACC,EAAMZ,GACjB,OACE,eAAC,IAAD,CAAca,KAAM,GAApB,UACE,cAAC1C,EAAA,QAAD,CAASC,IAAKwC,EAAKhB,KAAMvB,MAAM,OAAOC,OAAO,SAC7C,cAAC,EAAD,UAAayB,EAAEa,EAAKf,SACpB,cAAC,EAAD,UAAYE,EAAEa,EAAKd,aAHXE,yB,SC/BrBc,EAAsBpC,IAAOO,QAAV,8JASnBC,EAAUR,IAAOS,EAAV,wDAIPC,EAAiBV,IAAOW,IAAV,mJASd0B,EAAgBrC,IAAOW,IAAV,sGC8CXM,iBA7DI,SAAC,GAA6C,IAA3CE,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,QAASnB,EAA0B,EAA1BA,OAAQiB,EAAkB,EAAlBA,KAAMG,EAAY,EAAZA,EAAGC,EAAS,EAATA,GAcrD,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAKC,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,SAASH,GAAIA,EAA5D,UACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOC,MAAI,EAAX,SACE,eAAC,EAAD,WACE,6BAAKT,EAAEF,KACP,cAAC,EAAD,UAAYE,EAAED,KACd,cAAC,EAAD,UACCnB,GACqB,kBAAXA,GACP,qCACA,cAACF,EAAA,QAAD,CACAI,MAAOF,EAAO,GAAGE,MACjBR,MAAM,OACNU,QAnBI,WAClBiC,OAAOC,SAASC,OAAO,0EAeT,SAKGnB,EAAEpB,EAAO,GAAGkB,SAEf,cAACpB,EAAA,QAAD,CACEI,MAAOF,EAAO,GAAGE,MACjBR,MAAM,OACNU,QAAS,kBAlCV,SAACiB,GACAmB,SAASC,eAAepB,GAChCqB,eAAe,CACrBC,SAAU,WA+BmBC,CAAS,UAH1B,SAKKxB,EAAEpB,EAAO,GAAGkB,qBAQ3B,cAAC,IAAD,CAAKO,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOG,OAAK,EAAZ,SACE,cAACvC,EAAA,QAAD,CACEC,IAAKwB,EACLa,UAAU,oBACVpC,MAAM,OACNC,OAAO,qBC3DRwC,EAAsBpC,IAAOO,QAAV,8JAanBG,GAJUV,IAAOS,EAAV,wDAIUT,IAAOW,IAAV,oJASdC,EAAiBZ,IAAOW,IAAV,qG,GAMEX,IAAOW,IAAV,sG,iBCmCXM,iBAvDW,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAAkBC,GAAY,EAArBd,QAAqB,EAAZc,GAAGC,EAAS,EAATA,GAC7D,OACE,cAAC,EAAD,UACA,eAAC,IAAD,CAAKC,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,SAASH,GAAIA,EAA5D,UACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOC,MAAI,EAAX,SACE,eAAC,EAAD,WACA,6BAAKT,EAAEF,KACL,cAAC,EAAD,UACE,cAAC,IAAD,CAAa2B,IAAK1B,aAK1B,cAAC,IAAD,CAAKM,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOG,OAAK,EAAZ,SACE,cAACvC,EAAA,QAAD,CACEC,IAAKwB,EACLa,UAAU,oBACVpC,MAAM,OACNC,OAAO,qBCnBJmD,UAPM,SAAC7C,GACpB,MAAmB,SAAfA,EAAMqB,KAAwB,cAAC,EAAD,eAAsBrB,IACrC,UAAfA,EAAMqB,KAAyB,cAACyB,EAAD,eAAuB9C,IACvC,UAAfA,EAAMqB,KAAyB,cAAC,EAAD,eAAuBrB,IACnD","file":"static/js/9.3c8140a0.chunk.js","sourcesContent":["const SvgIcon = ({ src, width, height }) => (\r\n  <img src={`/img/svg/${src}`} alt={src} with={width} height={height} />\r\n);\r\n\r\nexport default SvgIcon;\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background: ${(props) => props.color || '#2e186a'};\r\n  color: ${(props) => (props.color ? '#2E186A' : '#fff')};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: ${(props) => (props.color ? '1px solid #2E186A' : '0px')};\r\n  border-radius: 8px;\r\n  height: 60px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: ${(props) => (props.width ? '160px' : '100%')};\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: ${(props) => (props.width ? '140px' : '100%')};\r\n  }\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    width: ${(props) => (props.width ? '130px' : '100%')};\r\n  }\r\n`;\r\n","import * as S from \"./styles\";\r\n\r\nconst Button = ({ color, width, children, onClick }) => (\r\n  <S.Button color={color} width={width} onClick={onClick}>\r\n    {children}\r\n  </S.Button>\r\n);\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport { Col } from 'antd';\r\n\r\nexport const LeftContentBlock = styled.section`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled.h6`\r\n  font-size: 1rem;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n`;\r\n\r\nexport const MinPara = styled.p`\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nexport const ServiceItem = styled(Col)`\r\n  margin: 2rem 0;\r\n  position: relative;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst LeftContentBlock = ({ icon, title, content, section, t, id }) => {\r\n  return (\r\n    <S.LeftContentBlock>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide left>\r\n            <SvgIcon\r\n              src={icon}\r\n              className=\"about-block-image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide right>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <S.ServiceWrapper>\r\n                <Row type=\"flex\" justify=\"space-between\">\r\n                  {section &&\r\n                    typeof section === \"object\" &&\r\n                    section.map((item, id) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <S.MinTitle>{t(item.title)}</S.MinTitle>\r\n                          <S.MinPara>{t(item.content)}</S.MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </S.ServiceWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.LeftContentBlock>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from 'styled-components';\r\n\r\nexport const RightBlockContainer = styled.section`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 400px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\nimport Button from \"../../../common/Button\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst RightBlock = ({ title, content, button, icon, t, id }) => {\r\n  //Learn More Button Click\r\n  const scrollTo = (id) => {\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  //Try the App Button Click -> Sends to StoryMap\r\n  const handleClick = () => {\r\n    window.location.assign('https://storymaps.arcgis.com/stories/ebf658dcec894c0fbe90549d2e631fde');\r\n  }\r\n\r\n  return (\r\n    <S.RightBlockContainer>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide left>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <S.ButtonWrapper>\r\n              {button &&\r\n                  typeof button === \"object\" &&\r\n                  <>\r\n                  <Button\r\n                  color={button[0].color}\r\n                  width=\"true\"\r\n                  onClick={handleClick}\r\n                  >\r\n                    {t(button[0].title)}\r\n                  </Button>\r\n                  <Button\r\n                    color={button[1].color}\r\n                    width=\"true\"\r\n                    onClick={() => scrollTo(\"about\")}\r\n                    >\r\n                      {t(button[1].title)}\r\n                  </Button>\r\n                  </>\r\n                }\r\n              </S.ButtonWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide right>\r\n            <SvgIcon\r\n              src={icon}\r\n              className=\"about-block-image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import styled from 'styled-components';\r\n\r\nexport const RightBlockContainer = styled.section`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 400px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst VideoContentBlock = ({ icon, title, content, section, t, id }) => {\r\n  return (\r\n    <S.RightBlockContainer>\r\n    <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n      <Col lg={11} md={11} sm={11} xs={24}>\r\n        <Slide left>\r\n          <S.ContentWrapper>\r\n          <h6>{t(title)}</h6>\r\n            <S.ServiceWrapper>\r\n              <ReactPlayer url={content}/>\r\n            </S.ServiceWrapper>\r\n          </S.ContentWrapper>\r\n        </Slide>\r\n      </Col>\r\n      <Col lg={11} md={11} sm={12} xs={24}>\r\n        <Slide right>\r\n          <SvgIcon\r\n            src={icon}\r\n            className=\"about-block-image\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          />\r\n        </Slide>\r\n      </Col>\r\n    </Row>\r\n  </S.RightBlockContainer>\r\n/*\r\n    <S.LeftContentBlock>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={12} xs={24}>\r\n          <Slide left>\r\n            <SvgIcon\r\n              src={icon}\r\n              className=\"about-block-image\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide right>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.ServiceWrapper>\r\n               <ReactPlayer url={content}/>\r\n              </S.ServiceWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.LeftContentBlock>\r\n  */\r\n    );\r\n};\r\n\r\nexport default withTranslation()(VideoContentBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport VideoContentBlock from \"./VideoContentBlock\";\r\n\r\nconst ContentBlock = (props) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  if (props.type === \"video\") return <VideoContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"sourceRoot":""}